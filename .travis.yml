language: php
sudo: false

php:
  - 5.5
  - 5.6
  - 7.0
  - 7.1

git:
  depth: 1

compiler:
  - gcc
  - clang

env:
  global:
    - LD_LIBRARY_PATH="$TRAVIS_BUILD_DIR/build/lib":$LD_LIBRARY_PATH
    - LIBRARY_PATH="$TRAVIS_BUILD_DIR/build/lib":$LIBRARY_PATH
    - C_INCLUDE_PATH="$TRAVIS_BUILD_DIR/build/include"
    - CFLAGS="-g3 -O0 -Wall -fvisibility=hidden"
    - ZEPHIR_PARSER_VERSION="v1.1.0"
  matrix:
    - CC="ccache gcc"
    - CC="clang"
    - CC="gcc" ZEPHIR_PARSER_VERSION="development"

matrix:
  fast_finish: true
  allow_failures:
    - php: nightly
  include:
    - env: CC="ccache gcc"
      php: nightly
      compiler: gcc
    - env: CC="clang"
      php: nightly
      compiler: clang
    - env: CC="gcc" ZEPHIR_PARSER_VERSION="development"
      php: nightly
      compiler: gcc

cache:
  apt: true
  ccache: true
  timeout: 691200
  directories:
    - vendor
    - $HOME/.ccache
    - $HOME/.composer/cache

before_install:
  - if [[ ! -z "${GH_TOKEN}" ]]; then composer config github-oauth.github.com ${GH_TOKEN}; echo "Configured Github token"; fi;

install:
  - composer --prefer-source install
  - bash unit-tests/ci/install_zephir_parser.sh
  - ./install

before_script:
  - $(phpenv which php) compiler.php help
  - $(phpenv which php) compiler.php generate
  - $(phpenv which php) compiler.php stubs
  - $(phpenv which php) compiler.php api
  - (cd ext; $(phpenv which phpize) && ./configure --silent --with-php-config=$(phpenv which php-config) --enable-test && make -j"$(getconf _NPROCESSORS_ONLN)" && make --silent install && phpenv config-add ../unit-tests/ci/test.ini)
  - ulimit -c unlimited || true
  - $CC --version

script:
  - echo 'variables_order=EGPCS' >> "$(phpenv root)/versions/$(phpenv version-name)/etc/php.ini"
  - vendor/bin/phpcs --standard=PSR2 --report=emacs --extensions=php --warning-severity=0 Library/ unit-tests/Extension/ unit-tests/Zephir/
  - valgrind --read-var-info=yes --error-exitcode=1 --fullpath-after= --track-origins=yes --leak-check=full ./unit-tests/phpunit --not-exit -c phpunit.xml.dist --debug unit-tests/
  - $(phpenv which php) unit-tests/microbench.php

after_success:
  - if [[ ! -z "${CODECOV_TOKEN}" ]]; then bash <(curl -s https://codecov.io/bash); fi;

after_failure:
  - ./unit-tests/ci/after_failure.sh

notifications:
    email:
        recipients:
            - build@phalconphp.com
        on_success: change
        on_failure: always

addons:
  apt:
    packages:
      - re2c
      - valgrind
      - gdb
